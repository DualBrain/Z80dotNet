<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="_Utils.t4"#>
<#@ output extension=".cs" #>
// AUTOGENERATED CODE
//
// Do not make changes directly to this (.cs) file.
// Change <#=Path.GetFileName(Host.TemplateFile)#> instead.

namespace Konamiman.Z80dotNet
{
    public partial class Z80InstructionExecutor
    {
<# var names = new Dictionary<string, string> {
       {"0",""},
       {"C0","NC"},{"C1","C"},
       {"Z0","NZ"},{"Z1","Z"},
       {"P0","PO"},{"P1","PE"},
       {"S0","P"},{"S1","M"}
    };
    foreach(var flag in new[] {"","C","Z","P","S"}) {
    foreach(var flagValue in new[] {1, 0}) {
        if(flag=="" && flagValue==1) continue;
        var name=names[flag+flagValue]; #>
        /// <summary>
        /// The RET<#=name=="" ? "" : " "+name+""#> instruction.
        /// </summary>
        private byte RET<#=name=="" ? "" : "_"+name#>()
        {
            FetchFinished();
<# if(flag!="") { #>

            if(Registers.<#=flag#>F == <#=flagValue ^ 1#>)
                return 5;
<# } #>

<# PopFromStack("PC", isUshort: true); #>

            return 11;
        }

<# }} #>
    }
}