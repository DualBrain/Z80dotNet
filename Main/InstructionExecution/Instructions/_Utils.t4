<#+
string Register(string name)
{
	return "Registers." + name;
}

bool IsIndexRegister(string name)
{
	return (name.StartsWith("IX") || name.StartsWith("IY"));
}

object IfIndexRegister(string regName, object value, object @else)
{
    return regName.StartsWith("IX") || regName.StartsWith("IY") ? value : @else;
}

void PopFromStack(string reg, bool isUshort = false)
{ #>
			var sp = Registers.SP.ToUShort();
            var new<#=reg#> = NumberUtils.CreateShort(
                ProcessorAgent.ReadFromMemory(sp),
                ProcessorAgent.ReadFromMemory(sp.Inc()));
            Registers.<#=reg#> = new<#=reg#><#=isUshort ? ".ToUShort()" : "" #>;

            Registers.SP = Registers.SP.Add(2);
<#+
}

void PushToStack(string reg, bool isUshort = false)
{ #>
			var valueToPush = Registers.<#=reg#><#=isUshort ? ".ToShort()" : "" #>;
			var sp = Registers.SP.Dec();
			ProcessorAgent.WriteToMemory(sp.ToUShort(), valueToPush.GetHighByte());
			sp = sp.Dec();
			ProcessorAgent.WriteToMemory(sp.ToUShort(), valueToPush.GetLowByte());
			Registers.SP = sp;
<#+
}

#>