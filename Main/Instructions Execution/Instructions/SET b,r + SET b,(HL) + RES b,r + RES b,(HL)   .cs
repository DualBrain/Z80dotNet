
// AUTOGENERATED CODE
//
// Do not make changes directly to this (.cs) file.
// Change "SET b,r + SET b,(HL) + RES b,r + RES b,(HL)   .tt" instead.

namespace Konamiman.Z80dotNet
{
    public partial class Z80InstructionExecutor
    {
		/// <summary>
        /// The SET 0,A instruction
        /// </summary>
        byte SET_0_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(0, 1);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 1,A instruction
        /// </summary>
        byte SET_1_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(1, 1);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 2,A instruction
        /// </summary>
        byte SET_2_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(2, 1);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 3,A instruction
        /// </summary>
        byte SET_3_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(3, 1);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 4,A instruction
        /// </summary>
        byte SET_4_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(4, 1);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 5,A instruction
        /// </summary>
        byte SET_5_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(5, 1);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 6,A instruction
        /// </summary>
        byte SET_6_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(6, 1);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 7,A instruction
        /// </summary>
        byte SET_7_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(7, 1);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 0,A instruction
        /// </summary>
        byte RES_0_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(0, 0);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 1,A instruction
        /// </summary>
        byte RES_1_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(1, 0);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 2,A instruction
        /// </summary>
        byte RES_2_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(2, 0);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 3,A instruction
        /// </summary>
        byte RES_3_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(3, 0);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 4,A instruction
        /// </summary>
        byte RES_4_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(4, 0);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 5,A instruction
        /// </summary>
        byte RES_5_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(5, 0);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 6,A instruction
        /// </summary>
        byte RES_6_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(6, 0);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 7,A instruction
        /// </summary>
        byte RES_7_A()
        {
            FetchFinished();

            var oldValue = Registers.A;
	        var newValue = oldValue.WithBit(7, 0);
            Registers.A = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 0,B instruction
        /// </summary>
        byte SET_0_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(0, 1);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 1,B instruction
        /// </summary>
        byte SET_1_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(1, 1);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 2,B instruction
        /// </summary>
        byte SET_2_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(2, 1);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 3,B instruction
        /// </summary>
        byte SET_3_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(3, 1);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 4,B instruction
        /// </summary>
        byte SET_4_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(4, 1);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 5,B instruction
        /// </summary>
        byte SET_5_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(5, 1);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 6,B instruction
        /// </summary>
        byte SET_6_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(6, 1);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 7,B instruction
        /// </summary>
        byte SET_7_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(7, 1);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 0,B instruction
        /// </summary>
        byte RES_0_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(0, 0);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 1,B instruction
        /// </summary>
        byte RES_1_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(1, 0);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 2,B instruction
        /// </summary>
        byte RES_2_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(2, 0);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 3,B instruction
        /// </summary>
        byte RES_3_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(3, 0);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 4,B instruction
        /// </summary>
        byte RES_4_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(4, 0);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 5,B instruction
        /// </summary>
        byte RES_5_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(5, 0);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 6,B instruction
        /// </summary>
        byte RES_6_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(6, 0);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 7,B instruction
        /// </summary>
        byte RES_7_B()
        {
            FetchFinished();

            var oldValue = Registers.B;
	        var newValue = oldValue.WithBit(7, 0);
            Registers.B = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 0,C instruction
        /// </summary>
        byte SET_0_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(0, 1);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 1,C instruction
        /// </summary>
        byte SET_1_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(1, 1);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 2,C instruction
        /// </summary>
        byte SET_2_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(2, 1);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 3,C instruction
        /// </summary>
        byte SET_3_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(3, 1);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 4,C instruction
        /// </summary>
        byte SET_4_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(4, 1);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 5,C instruction
        /// </summary>
        byte SET_5_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(5, 1);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 6,C instruction
        /// </summary>
        byte SET_6_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(6, 1);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 7,C instruction
        /// </summary>
        byte SET_7_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(7, 1);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 0,C instruction
        /// </summary>
        byte RES_0_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(0, 0);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 1,C instruction
        /// </summary>
        byte RES_1_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(1, 0);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 2,C instruction
        /// </summary>
        byte RES_2_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(2, 0);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 3,C instruction
        /// </summary>
        byte RES_3_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(3, 0);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 4,C instruction
        /// </summary>
        byte RES_4_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(4, 0);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 5,C instruction
        /// </summary>
        byte RES_5_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(5, 0);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 6,C instruction
        /// </summary>
        byte RES_6_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(6, 0);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 7,C instruction
        /// </summary>
        byte RES_7_C()
        {
            FetchFinished();

            var oldValue = Registers.C;
	        var newValue = oldValue.WithBit(7, 0);
            Registers.C = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 0,D instruction
        /// </summary>
        byte SET_0_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(0, 1);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 1,D instruction
        /// </summary>
        byte SET_1_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(1, 1);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 2,D instruction
        /// </summary>
        byte SET_2_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(2, 1);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 3,D instruction
        /// </summary>
        byte SET_3_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(3, 1);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 4,D instruction
        /// </summary>
        byte SET_4_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(4, 1);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 5,D instruction
        /// </summary>
        byte SET_5_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(5, 1);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 6,D instruction
        /// </summary>
        byte SET_6_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(6, 1);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 7,D instruction
        /// </summary>
        byte SET_7_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(7, 1);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 0,D instruction
        /// </summary>
        byte RES_0_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(0, 0);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 1,D instruction
        /// </summary>
        byte RES_1_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(1, 0);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 2,D instruction
        /// </summary>
        byte RES_2_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(2, 0);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 3,D instruction
        /// </summary>
        byte RES_3_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(3, 0);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 4,D instruction
        /// </summary>
        byte RES_4_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(4, 0);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 5,D instruction
        /// </summary>
        byte RES_5_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(5, 0);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 6,D instruction
        /// </summary>
        byte RES_6_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(6, 0);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 7,D instruction
        /// </summary>
        byte RES_7_D()
        {
            FetchFinished();

            var oldValue = Registers.D;
	        var newValue = oldValue.WithBit(7, 0);
            Registers.D = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 0,E instruction
        /// </summary>
        byte SET_0_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(0, 1);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 1,E instruction
        /// </summary>
        byte SET_1_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(1, 1);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 2,E instruction
        /// </summary>
        byte SET_2_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(2, 1);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 3,E instruction
        /// </summary>
        byte SET_3_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(3, 1);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 4,E instruction
        /// </summary>
        byte SET_4_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(4, 1);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 5,E instruction
        /// </summary>
        byte SET_5_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(5, 1);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 6,E instruction
        /// </summary>
        byte SET_6_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(6, 1);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 7,E instruction
        /// </summary>
        byte SET_7_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(7, 1);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 0,E instruction
        /// </summary>
        byte RES_0_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(0, 0);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 1,E instruction
        /// </summary>
        byte RES_1_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(1, 0);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 2,E instruction
        /// </summary>
        byte RES_2_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(2, 0);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 3,E instruction
        /// </summary>
        byte RES_3_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(3, 0);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 4,E instruction
        /// </summary>
        byte RES_4_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(4, 0);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 5,E instruction
        /// </summary>
        byte RES_5_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(5, 0);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 6,E instruction
        /// </summary>
        byte RES_6_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(6, 0);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 7,E instruction
        /// </summary>
        byte RES_7_E()
        {
            FetchFinished();

            var oldValue = Registers.E;
	        var newValue = oldValue.WithBit(7, 0);
            Registers.E = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 0,H instruction
        /// </summary>
        byte SET_0_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(0, 1);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 1,H instruction
        /// </summary>
        byte SET_1_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(1, 1);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 2,H instruction
        /// </summary>
        byte SET_2_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(2, 1);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 3,H instruction
        /// </summary>
        byte SET_3_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(3, 1);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 4,H instruction
        /// </summary>
        byte SET_4_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(4, 1);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 5,H instruction
        /// </summary>
        byte SET_5_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(5, 1);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 6,H instruction
        /// </summary>
        byte SET_6_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(6, 1);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 7,H instruction
        /// </summary>
        byte SET_7_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(7, 1);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 0,H instruction
        /// </summary>
        byte RES_0_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(0, 0);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 1,H instruction
        /// </summary>
        byte RES_1_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(1, 0);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 2,H instruction
        /// </summary>
        byte RES_2_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(2, 0);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 3,H instruction
        /// </summary>
        byte RES_3_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(3, 0);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 4,H instruction
        /// </summary>
        byte RES_4_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(4, 0);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 5,H instruction
        /// </summary>
        byte RES_5_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(5, 0);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 6,H instruction
        /// </summary>
        byte RES_6_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(6, 0);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 7,H instruction
        /// </summary>
        byte RES_7_H()
        {
            FetchFinished();

            var oldValue = Registers.H;
	        var newValue = oldValue.WithBit(7, 0);
            Registers.H = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 0,L instruction
        /// </summary>
        byte SET_0_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(0, 1);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 1,L instruction
        /// </summary>
        byte SET_1_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(1, 1);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 2,L instruction
        /// </summary>
        byte SET_2_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(2, 1);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 3,L instruction
        /// </summary>
        byte SET_3_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(3, 1);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 4,L instruction
        /// </summary>
        byte SET_4_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(4, 1);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 5,L instruction
        /// </summary>
        byte SET_5_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(5, 1);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 6,L instruction
        /// </summary>
        byte SET_6_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(6, 1);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 7,L instruction
        /// </summary>
        byte SET_7_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(7, 1);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 0,L instruction
        /// </summary>
        byte RES_0_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(0, 0);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 1,L instruction
        /// </summary>
        byte RES_1_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(1, 0);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 2,L instruction
        /// </summary>
        byte RES_2_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(2, 0);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 3,L instruction
        /// </summary>
        byte RES_3_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(3, 0);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 4,L instruction
        /// </summary>
        byte RES_4_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(4, 0);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 5,L instruction
        /// </summary>
        byte RES_5_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(5, 0);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 6,L instruction
        /// </summary>
        byte RES_6_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(6, 0);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The RES 7,L instruction
        /// </summary>
        byte RES_7_L()
        {
            FetchFinished();

            var oldValue = Registers.L;
	        var newValue = oldValue.WithBit(7, 0);
            Registers.L = newValue;
	
			return 8;
        }

		/// <summary>
        /// The SET 0,(HL) instruction
        /// </summary>
        byte SET_0_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(0, 1);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The SET 1,(HL) instruction
        /// </summary>
        byte SET_1_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(1, 1);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The SET 2,(HL) instruction
        /// </summary>
        byte SET_2_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(2, 1);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The SET 3,(HL) instruction
        /// </summary>
        byte SET_3_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(3, 1);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The SET 4,(HL) instruction
        /// </summary>
        byte SET_4_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(4, 1);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The SET 5,(HL) instruction
        /// </summary>
        byte SET_5_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(5, 1);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The SET 6,(HL) instruction
        /// </summary>
        byte SET_6_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(6, 1);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The SET 7,(HL) instruction
        /// </summary>
        byte SET_7_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(7, 1);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The RES 0,(HL) instruction
        /// </summary>
        byte RES_0_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(0, 0);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The RES 1,(HL) instruction
        /// </summary>
        byte RES_1_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(1, 0);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The RES 2,(HL) instruction
        /// </summary>
        byte RES_2_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(2, 0);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The RES 3,(HL) instruction
        /// </summary>
        byte RES_3_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(3, 0);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The RES 4,(HL) instruction
        /// </summary>
        byte RES_4_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(4, 0);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The RES 5,(HL) instruction
        /// </summary>
        byte RES_5_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(5, 0);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The RES 6,(HL) instruction
        /// </summary>
        byte RES_6_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(6, 0);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

		/// <summary>
        /// The RES 7,(HL) instruction
        /// </summary>
        byte RES_7_aHL()
        {
            FetchFinished();

			var address = Registers.HL.ToUShort();
			var oldValue = ProcessorAgent.ReadFromMemory(address);
            var newValue = oldValue.WithBit(7, 0);
			ProcessorAgent.WriteToMemory(address, newValue);
    
			return 15;
        }

	}
}
