<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
// AUTOGENERATED CODE
//
// Do not make changes directly to this (.cs) file.
// Change <#=Path.GetFileName(Host.TemplateFile)#> instead.

using NUnit.Framework;
using Ploeh.AutoFixture;

namespace Konamiman.Z80dotNet.Tests.InstructionsExecution
{
    public partial class Z80InstructionsExecutor
    {
<#  var regs = new[] {"BC","DE","HL","SP"};
	var opcodes = new[] { "01", "11", "21", "31" };
	for(int i=0; i<regs.Length; i++) { #>
        [Test]
        public void LD_<#=regs[i]#>_nn_works()
        {
            var oldValue = Fixture.Create<short>();
            var newValue = Fixture.Create<short>();

            Registers.<#=regs[i]=="SP" ? "" : "Main."#><#=regs[i]#> = oldValue;

            SetNextFetches(newValue.GetLowByte(), newValue.GetHighByte());
            Sut.Execute(0x<#=opcodes[i]#>);

            Assert.AreEqual(newValue, Registers.<#=regs[i]=="SP" ? "" : "Main."#><#=regs[i]#>);
        }

<# } #>
    }
}
